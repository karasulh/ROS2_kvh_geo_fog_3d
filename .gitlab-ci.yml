variables:
    ROS_DISTRO: "kinetic"
    CI_SOURCE_PATH: "$CI_PROJECT_DIR"
    GIT_SUBMODULE_STRATEGY: recursive

image:
    name: "artifacts.mitre.org:8200/untrusted-mitrewide-overwritable/dart/dart_gitlab_runner_${ROS_DISTRO}"

stages:
    - build
    - deploy

build:
    stage: build
    script:
      - mkdir -p catkin_ws/src/${CI_PROJECT_NAME}
      - shopt -s extglob dotglob
      - mv !(catkin_ws) catkin_ws/src/${CI_PROJECT_NAME}/
      - shopt -u dotglob
      - cd catkin_ws
      - source /opt/ros/${ROS_DISTRO}/setup.bash
      - catkin build -DCMAKE_BUILD_TYPE=Release
    tags:
        - docker

#pages:
#  stage: deploy
#  script:
#    - rm -rf public/ || true
#    - mkdir public/
#    - docker rm ros_${ROS_DISTRO}_kvh_geo_fog_3d_tmpdocgen || true
#    - docker run --name ros_${ROS_DISTRO}_kvh_geo_fog_3d_tmpdocgen -e ROS_DISTRO='${ROS_DISTRO}' ros_${ROS_DISTRO}_kvh_geo_fog_3d bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && cd catkin_ws/src && rosdoc_lite -o doc kvh_geo_fog_3d_driver"
#    - docker cp ros_${ROS_DISTRO}_kvh_geo_fog_3d_tmpdocgen:/home/build/catkin_ws/src/doc/html/. public/
#    - docker rm ros_${ROS_DISTRO}_kvh_geo_fog_3d_tmpdocgen
#  tags:
#    - docker-shell
#  artifacts:
#    paths:
#      - public/
#  only:
#    - master
